{"hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter","doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn","doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn\/SQLColumn-Implementations"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"needle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"caseInsensitive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lighter23SQLColumnValuePredicateV","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValuePredicate","text":"SQLColumnValuePredicate"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The string to search for.","type":"text"}]}],"name":"needle"},{"name":"caseInsensitive","content":[{"inlineContent":[{"text":"Whether the match should ignore case, defaults to","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"text":" (","type":"text"},{"type":"codeVoice","code":"false"},{"text":" requires pragma!)","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["$0.name.contains(\"uc\") \/\/ does a `name LIKE '%uc%'`"]},{"inlineContent":[{"text":"Note: By default all SQLite ","type":"text"},{"type":"codeVoice","code":"LIKE"},{"type":"text","text":" operations are case insensitive!"},{"text":" ","type":"text"},{"text":"To enable case sensitive ","type":"text"},{"code":"LIKE","type":"codeVoice"},{"type":"text","text":", a "},{"type":"codeVoice","code":"PRAGMA"},{"text":" has to be set:","type":"text"},{"type":"text","text":" "},{"code":"PRAGMA case_sensitive_like = ON","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Checks whether the value in the column contains a certain string."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lighter\/mappedcolumn\/contains(_:caseinsensitive:)"]}],"metadata":{"modules":[{"relatedModules":["Lighter"],"name":"Lighter.swift for SQLite3"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}]},"title":"contains(_:caseInsensitive:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"caseInsensitive"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lighter23SQLColumnValuePredicateV","kind":"typeIdentifier","text":"SQLColumnValuePredicate"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","extendedModule":"Lighter","roleHeading":"Instance Method","externalID":"s:7Lighter9SQLColumnPAASy5ValueRpzrlE8contains_15caseInsensitiveAA0bC9PredicateVyxGAE_SbtF::SYNTHESIZED::s:7Lighter12MappedColumnV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn\/contains(_:caseInsensitive:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Lighter/documentation/Lighter/MappedColumn":{"title":"MappedColumn","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MappedColumn","kind":"identifier"}],"abstract":[{"type":"text","text":"A concrete implementation of the "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","type":"reference","isActive":true},{"text":" protocol.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"MappedColumn","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn","url":"\/documentation\/lighter\/mappedcolumn"},"doc://Lighter/documentation/Lighter/MappedColumn/SQLColumn-Implementations":{"title":"SQLColumn Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn\/SQLColumn-Implementations","url":"\/documentation\/lighter\/mappedcolumn\/sqlcolumn-implementations"},"doc://Lighter/documentation/Lighter/SQLColumn":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","type":"topic","role":"symbol","navigatorTitle":[{"text":"SQLColumn","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlcolumn","abstract":[{"type":"text","text":"Represents a SQL table or view column."}],"title":"SQLColumn","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLColumn"}]},"doc://Lighter/documentation/Lighter/SQLColumnValuePredicate":{"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValuePredicate","url":"\/documentation\/lighter\/sqlcolumnvaluepredicate","title":"SQLColumnValuePredicate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLColumnValuePredicate","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A predicate that compares a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","type":"reference"},{"type":"text","text":" of a table\/view against"},{"type":"text","text":" "},{"text":"a literal value.","type":"text"}],"navigatorTitle":[{"text":"SQLColumnValuePredicate","kind":"identifier"}]},"doc://Lighter/documentation/Lighter":{"url":"\/documentation\/lighter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Lighter\/documentation\/Lighter","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"inlineContent":[{"type":"text","text":"very"}],"type":"strong"},{"type":"text","text":", fast. Dependency free."}]},"doc://Lighter/documentation/Lighter/MappedColumn/contains(_:caseInsensitive:)":{"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn\/contains(_:caseInsensitive:)","title":"contains(_:caseInsensitive:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"caseInsensitive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lighter23SQLColumnValuePredicateV","kind":"typeIdentifier","text":"SQLColumnValuePredicate"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/lighter\/mappedcolumn\/contains(_:caseinsensitive:)","abstract":[{"type":"text","text":"Checks whether the value in the column contains a certain string."}],"role":"symbol","kind":"symbol"}}}