{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","preciseIdentifier":"s:7Lighter15SQLNotPredicateV","text":"SQLNotPredicate"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This just wraps the predicate in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"There is another "},{"type":"codeVoice","code":"!"},{"type":"text","text":" overload which unwraps the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/lighter\/sqlinterpolatedpredicate\/!(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/!(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Negate the "},{"type":"codeVoice","code":"SQLPredicate"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"!(_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SQLNotPredicate","preciseIdentifier":"s:7Lighter15SQLNotPredicateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"op","externalID":"s:7Lighter12SQLPredicatePAAE1nopyAA15SQLNotPredicateVyxGxFZ::SYNTHESIZED::s:7Lighter24SQLInterpolatedPredicateV","extendedModule":"Lighter","modules":[{"name":"Lighter.swift for SQLite3"}]},"hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/SQLPredicate-Implementations"]]},"references":{"doc://Lighter/documentation/Lighter":{"role":"collection","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"type":"strong","inlineContent":[{"type":"text","text":"very"}]},{"type":"text","text":", fast. Dependency free."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter","kind":"symbol","type":"topic","url":"\/documentation\/lighter"},"doc://Lighter/documentation/Lighter/SQLNotPredicate":{"role":"symbol","title":"SQLNotPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLNotPredicate"}],"abstract":[{"type":"text","text":"A predicate that negates the outcome of another."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLNotPredicate"}],"url":"\/documentation\/lighter\/sqlnotpredicate"},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate":{"role":"symbol","title":"SQLInterpolatedPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInterpolatedPredicate"}],"abstract":[{"type":"text","text":"A predicate containing raw SQL, that can use string interpolation to generate"},{"type":"text","text":" "},{"type":"text","text":"proper values."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLInterpolatedPredicate"}],"url":"\/documentation\/lighter\/sqlinterpolatedpredicate"},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate/!(_:)":{"role":"symbol","title":"!(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SQLNotPredicate","preciseIdentifier":"s:7Lighter15SQLNotPredicateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Negate the "},{"type":"codeVoice","code":"SQLPredicate"},{"type":"text","text":"."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/!(_:)","kind":"symbol","type":"topic","url":"\/documentation\/lighter\/sqlinterpolatedpredicate\/!(_:)"},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate/SQLPredicate-Implementations":{"role":"collectionGroup","title":"SQLPredicate Implementations","abstract":[],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/SQLPredicate-Implementations","kind":"article","type":"topic","url":"\/documentation\/lighter\/sqlinterpolatedpredicate\/sqlpredicate-implementations"}}}