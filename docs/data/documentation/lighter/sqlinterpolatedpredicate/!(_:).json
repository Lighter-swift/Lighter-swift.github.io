{"abstract":[{"text":"Negate the ","type":"text"},{"type":"codeVoice","code":"SQLPredicate"},{"type":"text","text":"."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SQLNotPredicate","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","preciseIdentifier":"s:7Lighter15SQLNotPredicateV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"This just wraps the predicate in a "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","isActive":true,"type":"reference"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"There is another "},{"type":"codeVoice","code":"!"},{"text":" overload which unwraps the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/SQLPredicate-Implementations"]]},"variants":[{"paths":["\/documentation\/lighter\/sqlinterpolatedpredicate\/!(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/!(_:)"},"metadata":{"role":"symbol","modules":[{"name":"Lighter.swift for SQLite3","relatedModules":["Lighter"]}],"roleHeading":"Operator","extendedModule":"Lighter","title":"!(_:)","symbolKind":"op","externalID":"s:7Lighter12SQLPredicatePAAE1nopyAA15SQLNotPredicateVyxGxFZ::SYNTHESIZED::s:7Lighter24SQLInterpolatedPredicateV","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"SQLNotPredicate","preciseIdentifier":"s:7Lighter15SQLNotPredicateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate/!(_:)":{"url":"\/documentation\/lighter\/sqlinterpolatedpredicate\/!(_:)","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/!(_:)","kind":"symbol","type":"topic","role":"symbol","title":"!(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lighter15SQLNotPredicateV","text":"SQLNotPredicate","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Negate the ","type":"text"},{"type":"codeVoice","code":"SQLPredicate"},{"text":".","type":"text"}]},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate":{"abstract":[{"type":"text","text":"A predicate containing raw SQL, that can use string interpolation to generate"},{"type":"text","text":" "},{"type":"text","text":"proper values."}],"navigatorTitle":[{"text":"SQLInterpolatedPredicate","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","type":"topic","title":"SQLInterpolatedPredicate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLInterpolatedPredicate","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlinterpolatedpredicate"},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate/SQLPredicate-Implementations":{"kind":"article","type":"topic","title":"SQLPredicate Implementations","url":"\/documentation\/lighter\/sqlinterpolatedpredicate\/sqlpredicate-implementations","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate\/SQLPredicate-Implementations","abstract":[],"role":"collectionGroup"},"doc://Lighter/documentation/Lighter/SQLNotPredicate":{"role":"symbol","title":"SQLNotPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLNotPredicate"}],"url":"\/documentation\/lighter\/sqlnotpredicate","navigatorTitle":[{"kind":"identifier","text":"SQLNotPredicate"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","abstract":[{"text":"A predicate that negates the outcome of another.","type":"text"}],"kind":"symbol","type":"topic"},"doc://Lighter/documentation/Lighter":{"url":"\/documentation\/lighter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Lighter\/documentation\/Lighter","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"inlineContent":[{"type":"text","text":"very"}],"type":"strong"},{"type":"text","text":", fast. Dependency free."}]}}}