{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLiteValueType"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The base types supported by SQLite3 are:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int"},{"type":"text","text":"       (SQL "},{"type":"codeVoice","code":"INTEGER"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double"},{"type":"text","text":"    (SQL "},{"type":"codeVoice","code":"REAL"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"String"},{"type":"text","text":"    (SQL "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[ UInt8 ]"},{"type":"text","text":" (SQL "},{"type":"codeVoice","code":"BLOB"},{"type":"text","text":")"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition Lighter has builtin support for a set of common Foundation types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"URL"},{"type":"text","text":"     (mapped to the String representation of the "},{"type":"codeVoice","code":"URL"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Data"},{"type":"text","text":"    (as an alternative to "},{"type":"codeVoice","code":"[ UInt8 ]"},{"type":"text","text":" for "},{"type":"codeVoice","code":"BLOB"},{"type":"text","text":" columns)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UUID"},{"type":"text","text":"    (can be mapped to either a String UUID or a 16-byte BLOB)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Date"},{"type":"text","text":"    (either as a String using a formatter, or as a utime stamp)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Decimal"},{"type":"text","text":" (make sure you understand what "},{"type":"codeVoice","code":"Decimal"},{"type":"text","text":" is actually good for)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" can be used for optional values (e.g. "},{"type":"codeVoice","code":"String?"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"codeVoice","code":"TEXT NULL"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: "},{"type":"codeVoice","code":"SQLiteValueType"},{"type":"text","text":"s are usually "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", making record types"},{"type":"text","text":" "},{"type":"text","text":"Hashable too!"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/lighter\/sqlitevaluetype"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A value that can be used in SQLite columns."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLiteValueType"}],"title":"SQLiteValueType","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:7Lighter15SQLiteValueTypeP","modules":[{"name":"Lighter.swift for SQLite3"}],"navigatorTitle":[{"kind":"identifier","text":"SQLiteValueType"}]},"hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter","doc:\/\/Lighter\/documentation\/Lighter\/Mapping"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/init(unsafeSQLite3StatementHandle:column:)","doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/init(unsafeSQLite3ValueHandle:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/requiresSQLBinding","doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/sqlStringValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/bind(unsafeSQLite3StatementHandle:index:then:)"]}],"references":{"doc://Lighter/documentation/Lighter/SQLiteValueType":{"role":"symbol","title":"SQLiteValueType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLiteValueType"}],"abstract":[{"type":"text","text":"A value that can be used in SQLite columns."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLiteValueType"}],"url":"\/documentation\/lighter\/sqlitevaluetype"},"doc://Lighter/documentation/Lighter":{"role":"collection","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"type":"strong","inlineContent":[{"type":"text","text":"very"}]},{"type":"text","text":", fast. Dependency free."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter","kind":"symbol","type":"topic","url":"\/documentation\/lighter"},"doc://Lighter/documentation/Lighter/SQLiteValueType/init(unsafeSQLite3ValueHandle:)":{"role":"symbol","title":"init(unsafeSQLite3ValueHandle:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unsafeSQLite3ValueHandle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Initialize a SQLite value from a value handle as used in SQLite3 custom"},{"type":"text","text":" "},{"type":"text","text":"functions."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/init(unsafeSQLite3ValueHandle:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/lighter\/sqlitevaluetype\/init(unsafesqlite3valuehandle:)"},"doc://Lighter/documentation/Lighter/SQLiteValueType/requiresSQLBinding":{"role":"symbol","title":"requiresSQLBinding","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiresSQLBinding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns true if the value prefers to be “bound” (e.g. texts and blobs)."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/requiresSQLBinding","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/lighter\/sqlitevaluetype\/requiressqlbinding"},"doc://Lighter/documentation/Lighter/SQLiteValueType/init(unsafeSQLite3StatementHandle:column:)":{"role":"symbol","title":"init(unsafeSQLite3StatementHandle:column:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unsafeSQLite3StatementHandle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":"!, "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Initialize a SQLite value from a column in the given SQLite3 prepared"},{"type":"text","text":" "},{"type":"text","text":"statement handle."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/init(unsafeSQLite3StatementHandle:column:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/lighter\/sqlitevaluetype\/init(unsafesqlite3statementhandle:column:)"},"doc://Lighter/documentation/Lighter/Mapping":{"role":"collectionGroup","title":"Mapping","abstract":[{"type":"text","text":"Mapping Data retrieved from the Database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Mapping","kind":"article","type":"topic","url":"\/documentation\/lighter\/mapping"},"doc://Lighter/documentation/Lighter/SQLiteValueType/sqlStringValue":{"role":"symbol","title":"sqlStringValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sqlStringValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Returns the literal SQL string for the given data type."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/sqlStringValue","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/lighter\/sqlitevaluetype\/sqlstringvalue"},"doc://Lighter/documentation/Lighter/SQLiteValueType/bind(unsafeSQLite3StatementHandle:index:then:)":{"role":"symbol","title":"bind(unsafeSQLite3StatementHandle:index:then:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unsafeSQLite3StatementHandle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":"!, "},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Bind the value to the passed in SQLite3 prepared statement to the given"},{"type":"text","text":" "},{"type":"text","text":"index and call a closure."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteValueType\/bind(unsafeSQLite3StatementHandle:index:then:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/lighter\/sqlitevaluetype\/bind(unsafesqlite3statementhandle:index:then:)"}}}