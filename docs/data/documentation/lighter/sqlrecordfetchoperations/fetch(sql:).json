{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lighter\/sqlrecordfetchoperations\/fetch(sql:)"]}],"metadata":{"externalID":"s:7Lighter24SQLRecordFetchOperationsV5fetch3sqlSayq_GAA13SQLExpressionV_tKF","modules":[{"name":"Lighter.swift for SQLite3","relatedModules":["Lighter"]}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"Lighter","title":"fetch(sql:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Ops","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SQLDatabaseOperations","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SQLRecord"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetch"},{"text":"(","kind":"text"},{"text":"sql","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lighter13SQLExpressionV","text":"SQLExpression","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"T","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Fetch records of a certain type using a custom query."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetch"},{"text":"(","kind":"text"},{"text":"sql","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SQLExpression","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:7Lighter13SQLExpressionV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"from","content":[{"type":"paragraph","inlineContent":[{"text":"A KeyPath leading to a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","type":"reference"},{"type":"text","text":" type, e.g. "},{"type":"codeVoice","code":"\\.person"}]}]},{"name":"sql","content":[{"inlineContent":[{"type":"text","text":"A SQL interpolation representing the query"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":"s matching the type specified."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If the resultset doesnâ€™t contain required values, the default values will"},{"type":"text","text":" "},{"text":"be used. I.e. this can still be used to fetch records which are derived","type":"text"},{"type":"text","text":" "},{"text":"from fragments.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"syntax":"swift","code":["let people = try db.people.fetch(sql:","  \"SELECT * FROM person WHERE name = \\(name)\"",")"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations\/fetch(sql:)","interfaceLanguage":"swift"},"references":{"doc://Lighter/documentation/Lighter/SQLExpression":{"type":"topic","role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLExpression","abstract":[{"type":"text","text":"A raw SQL expression, that can use string interpolation to generate"},{"text":" ","type":"text"},{"text":"proper values.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"navigatorTitle":[{"kind":"identifier","text":"SQLExpression"}],"title":"SQLExpression","kind":"symbol","url":"\/documentation\/lighter\/sqlexpression"},"doc://Lighter/documentation/Lighter/SQLRecordFetchOperations":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLRecordFetchOperations"}],"title":"SQLRecordFetchOperations","url":"\/documentation\/lighter\/sqlrecordfetchoperations","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLRecordFetchOperations","kind":"identifier"}],"abstract":[{"type":"text","text":"Runs fetch queries against a certain SQL table\/view."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations"},"doc://Lighter/documentation/Lighter/SQLRecordFetchOperations/fetch(sql:)":{"abstract":[{"type":"text","text":"Fetch records of a certain type using a custom query."}],"kind":"symbol","role":"symbol","url":"\/documentation\/lighter\/sqlrecordfetchoperations\/fetch(sql:)","title":"fetch(sql:)","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations\/fetch(sql:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetch"},{"text":"(","kind":"text"},{"text":"sql","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:7Lighter13SQLExpressionV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Ops","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SQLDatabaseOperations"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"code":"SQLRecord","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Lighter/documentation/Lighter/SQLRecord":{"url":"\/documentation\/lighter\/sqlrecord","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLRecord"},{"text":" is an abstract protocol representing a set of columns fetched","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from a database."}],"title":"SQLRecord","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLRecord"}],"navigatorTitle":[{"kind":"identifier","text":"SQLRecord"}]},"doc://Lighter/documentation/Lighter":{"url":"\/documentation\/lighter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Lighter\/documentation\/Lighter","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"inlineContent":[{"type":"text","text":"very"}],"type":"strong"},{"type":"text","text":", fast. Dependency free."}]}}}