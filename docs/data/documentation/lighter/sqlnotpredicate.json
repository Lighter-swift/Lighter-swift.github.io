{"hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter"]]},"metadata":{"roleHeading":"Structure","title":"SQLNotPredicate","externalID":"s:7Lighter15SQLNotPredicateV","symbolKind":"struct","modules":[{"name":"Lighter.swift for SQLite3"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLNotPredicate"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLNotPredicate"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A predicate that negates the outcome of another.","type":"text"}],"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/!(_:)-3qi45"],"title":"Operators"},{"title":"Initializers","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/predicate"]},{"identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/generateSQL(into:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/SQLPredicate-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLPredicate"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLNotPredicate"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"text":" : ","kind":"text"},{"text":"SQLPredicate","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLPredicate","kind":"typeIdentifier","preciseIdentifier":"s:7Lighter12SQLPredicateP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":"swift","code":["!$0.lastname.contains(\"uck\")"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lighter\/sqlnotpredicate"]}],"references":{"doc://Lighter/documentation/Lighter/SQLNotPredicate/predicate":{"abstract":[{"type":"text","text":"The predicate to be negated."}],"kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/predicate","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"predicate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"P"}],"url":"\/documentation\/lighter\/sqlnotpredicate\/predicate","title":"predicate"},"doc://Lighter/documentation/Lighter/SQLNotPredicate/!(_:)-3qi45":{"title":"!(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Lighter15SQLNotPredicateV","text":"SQLNotPredicate","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":">) -> ","kind":"text"},{"text":"P","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Negate the "},{"code":"SQLNotPredicate","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"code":"SQLPredicate","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/!(_:)-3qi45","url":"\/documentation\/lighter\/sqlnotpredicate\/!(_:)-3qi45"},"doc://Lighter/documentation/Lighter/SQLNotPredicate/generateSQL(into:)":{"url":"\/documentation\/lighter\/sqlnotpredicate\/generatesql(into:)","type":"topic","title":"generateSQL(into:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"generateSQL","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Base"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Lighter10SQLBuilderV","kind":"typeIdentifier","text":"SQLBuilder"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/generateSQL(into:)","abstract":[],"role":"symbol"},"doc://Lighter/documentation/Lighter/SQLNotPredicate/init(_:)":{"abstract":[{"text":"Create a new not-predicate using another predicate to be negated.","type":"text"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"url":"\/documentation\/lighter\/sqlnotpredicate\/init(_:)","kind":"symbol","type":"topic","title":"init(_:)","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLNotPredicate/SQLPredicate-Implementations":{"role":"collectionGroup","title":"SQLPredicate Implementations","url":"\/documentation\/lighter\/sqlnotpredicate\/sqlpredicate-implementations","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate\/SQLPredicate-Implementations","kind":"article","abstract":[],"type":"topic"},"doc://Lighter/documentation/Lighter/SQLNotPredicate":{"role":"symbol","title":"SQLNotPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLNotPredicate"}],"url":"\/documentation\/lighter\/sqlnotpredicate","navigatorTitle":[{"kind":"identifier","text":"SQLNotPredicate"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","abstract":[{"text":"A predicate that negates the outcome of another.","type":"text"}],"kind":"symbol","type":"topic"},"doc://Lighter/documentation/Lighter/SQLPredicate":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLPredicate","url":"\/documentation\/lighter\/sqlpredicate","type":"topic","abstract":[{"type":"text","text":"Represents a dynamic (but statically typed) predicate that can be rendered"},{"type":"text","text":" "},{"text":"into a SQL WHERE string.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPredicate"}],"title":"SQLPredicate","navigatorTitle":[{"text":"SQLPredicate","kind":"identifier"}]},"doc://Lighter/documentation/Lighter":{"url":"\/documentation\/lighter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Lighter\/documentation\/Lighter","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"inlineContent":[{"type":"text","text":"very"}],"type":"strong"},{"type":"text","text":", fast. Dependency free."}]}}}