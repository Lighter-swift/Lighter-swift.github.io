{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase\/transaction(mode:execute:)-2s7zu"},"kind":"symbol","metadata":{"title":"transaction(mode:execute:)","symbolKind":"method","externalID":"s:7Lighter11SQLDatabasePA2A0B15AsyncOperationsRzrlE11transaction4mode7executeqd__AA18SQLTransactionTypeO_qd__AA20SQLChangeTransactionCyxGKctYaKlF","role":"symbol","roleHeading":"Instance Method","modules":[{"relatedModules":["Lighter"],"name":"Lighter.swift for SQLite3"}],"extendedModule":"Lighter","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SQLDatabaseAsyncOperations"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"transaction","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"mode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SQLTransactionType","kind":"typeIdentifier","preciseIdentifier":"s:7Lighter18SQLTransactionTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": ("},{"text":"SQLChangeTransaction","preciseIdentifier":"s:7Lighter20SQLChangeTransactionC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}],"platforms":[{"name":"iOS","introducedAt":"13.0","beta":false,"deprecated":false,"unavailable":false},{"unavailable":false,"deprecated":false,"name":"macOS","beta":false,"introducedAt":"10.15"},{"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"tvOS","beta":false},{"unavailable":false,"name":"watchOS","beta":false,"introducedAt":"6.0","deprecated":false}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transaction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lighter18SQLTransactionTypeO","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType","kind":"typeIdentifier","text":"SQLTransactionType"},{"kind":"text","text":" = .default, "},{"text":"execute","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLChangeTransaction","text":"SQLChangeTransaction","kind":"typeIdentifier","preciseIdentifier":"s:7Lighter20SQLChangeTransactionC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"mode","content":[{"inlineContent":[{"type":"text","text":"Can be used to acquire a write lock right away. Defaults to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType\/deferred","isActive":true},{"type":"text","text":", which keeps the tx in read"},{"type":"text","text":" "},{"type":"text","text":"mode until the first change operation is issued."}],"type":"paragraph"}]},{"name":"execute","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The code which is executed within the transaction"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The result of the "},{"type":"codeVoice","code":"execute"},{"text":" closure if the transaction got","type":"text"},{"text":" ","type":"text"},{"text":"committed successfully.","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Transactions can be started on database objects, like:"}]},{"type":"codeListing","syntax":"swift","code":["try await db.transaction { tx in","  var person  = try tx.people.find(1)","  person.name = \"Spitz\"","  try tx.update(person)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the transaction is read-only (just runs a few selects),"},{"type":"text","text":" "},{"text":"the optimized ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase\/readTransaction(execute:)-8mbsj"},{"text":" can be used.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: Within a transaction async calls are not allowed (as they can"},{"type":"text","text":" "},{"type":"text","text":"block the transaction, and with it the database, for a unforseeable"},{"text":" ","type":"text"},{"text":"time).","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"A SQL transaction allows the user to run multiple SQL operations"},{"text":" ","type":"text"},{"type":"text","text":"as a single, atomic unit."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lighter\/sqldatabase\/transaction(mode:execute:)-2s7zu"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Lighter\/documentation\/Lighter","doc:\/\/Lighter\/documentation\/Lighter\/LighterAPI","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase"]]},"sections":[],"references":{"doc://Lighter/documentation/Lighter/SQLTransactionType":{"url":"\/documentation\/lighter\/sqltransactiontype","title":"SQLTransactionType","abstract":[{"text":"The transaction type defines whether a transaction needs write access","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and in non-WAL mode, whether a transaction is exclusive (i.e. forbids"},{"type":"text","text":" "},{"type":"text","text":"concurrent reads)."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLTransactionType"}],"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTransactionType"}]},"doc://Lighter/documentation/Lighter/SQLTransactionType/deferred":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"deferred","kind":"identifier"}],"url":"\/documentation\/lighter\/sqltransactiontype\/deferred","title":"SQLTransactionType.deferred","type":"topic","kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType\/deferred","abstract":[{"type":"text","text":"Start a read transaction on the first SELECT and upgrade to a write"},{"type":"text","text":" "},{"text":"transaction on the first modification.","type":"text"}],"role":"symbol"},"doc://Lighter/documentation/Lighter/SQLChangeTransaction":{"kind":"symbol","url":"\/documentation\/lighter\/sqlchangetransaction","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SQLChangeTransaction","kind":"identifier"}],"navigatorTitle":[{"text":"SQLChangeTransaction","kind":"identifier"}],"title":"SQLChangeTransaction","abstract":[{"type":"text","text":"A SQL transaction allows the user to run multiple SQL operations"},{"type":"text","text":" "},{"type":"text","text":"as a single, atomic unit."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLChangeTransaction","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLDatabase/readTransaction(execute:)-8mbsj":{"title":"readTransaction(execute:)","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase\/readTransaction(execute:)-8mbsj","abstract":[{"text":"A read-only SQL transaction allows the user to run multiple SQL operations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"efficiently."}],"role":"symbol","url":"\/documentation\/lighter\/sqldatabase\/readtransaction(execute:)-8mbsj","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"readTransaction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"execute","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lighter14SQLTransactionC","text":"SQLTransaction"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SQLDatabaseAsyncOperations"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","kind":"symbol"},"doc://Lighter/documentation/Lighter":{"url":"\/documentation\/lighter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Lighter\/documentation\/Lighter","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"inlineContent":[{"type":"text","text":"very"}],"type":"strong"},{"type":"text","text":", fast. Dependency free."}]},"doc://Lighter/documentation/Lighter/SQLDatabase/transaction(mode:execute:)-2s7zu":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transaction","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SQLTransactionType","preciseIdentifier":"s:7Lighter18SQLTransactionTypeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"execute","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lighter20SQLChangeTransactionC","text":"SQLChangeTransaction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"title":"transaction(mode:execute:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SQLDatabaseAsyncOperations"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/lighter\/sqldatabase\/transaction(mode:execute:)-2s7zu","abstract":[{"text":"A SQL transaction allows the user to run multiple SQL operations","type":"text"},{"text":" ","type":"text"},{"text":"as a single, atomic unit.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase\/transaction(mode:execute:)-2s7zu"},"doc://Lighter/documentation/Lighter/SQLDatabase":{"role":"symbol","abstract":[{"type":"text","text":"A type representing a SQLite3 database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLDatabase","kind":"identifier"}],"kind":"symbol","title":"SQLDatabase","navigatorTitle":[{"text":"SQLDatabase","kind":"identifier"}],"url":"\/documentation\/lighter\/sqldatabase","type":"topic"},"doc://Lighter/documentation/Lighter/LighterAPI":{"abstract":[{"text":"Using the Lighter API.","type":"text"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/LighterAPI","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/lighter\/lighterapi","title":"Lighter API Overview"}}}