{"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lighter"}],"type":"strong"},{"type":"text","text":" is a Swift toolset to work with "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.sqlite.org"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"databases  in a way that is "},{"type":"strong","inlineContent":[{"text":"typesafe","type":"text"}]},{"type":"text","text":" not just on the Swift side,"},{"type":"text","text":" "},{"type":"text","text":"but "},{"type":"strong","inlineContent":[{"type":"text","text":"down to the SQL schema"}]},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Like ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/SwiftGen\/SwiftGen"},{"type":"text","text":" but for SQLite."},{"type":"text","text":" "},{"text":"It is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"not an ORM"}]},{"text":", it doesn’t do type mapping at runtime.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like SQLite, the Lighter toolset is very versatile, highly configurable, and"},{"text":" ","type":"text"},{"type":"text","text":"applicable to a wide range of applications and project setups."},{"text":" ","type":"text"},{"type":"text","text":"From caches in iOS apps, or documents in Mac apps, to server side datasets."},{"type":"text","text":" "},{"type":"text","text":"It isn’t just a single tool, it is a set of tools for different usage scenarios."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In short, it takes SQL (or binary SQLite) files like this:"}]},{"type":"codeListing","syntax":"sql","code":["CREATE TABLE person (","  person_id INTEGER PRIMARY KEY NOT NULL,","  name      TEXT NOT NULL,","  title     TEXT NULL",");"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and generates Swift code like this:"}]},{"type":"codeListing","syntax":"swift","code":["struct ContactsDB {","","  struct Person: Identifiable, Hashable, Codable {","    var id       : Int","    var name     : String","    var title    : String?","  }","}"]},{"inlineContent":[{"type":"text","text":"Alongside the necessary code to work with the tables in the database:"}],"type":"paragraph"},{"syntax":"swift","code":["let people = try await db.people.fetch { $0.name.hasPrefix(\"Bour\") }","var jason  = people[0]","jason.name = \"Bourne!\"","try await db.transaction { tx in","  try tx.update(jason)","  try tx.insert(jason)","  try tx.delete(jason)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"It works with async\/await, or without,","type":"text"},{"type":"text","text":" "},{"text":"with a supporting library (Lighter), or dependency free.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Lighter knows about relationships contained in the database and can also"},{"type":"text","text":" "},{"type":"text","text":"generate code to resolve those:"}]},{"syntax":"swift","type":"codeListing","code":["let product = try await db.products.find(42)","let orders  = try await db.orders.fetch(for: product)"]},{"inlineContent":[{"type":"text","text":"If desired, it generates beautiful DocC documentation within the generated code"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"identifier":"https:\/\/Northwind-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/employee","isActive":true,"type":"reference"},{"text":").","type":"text"}],"type":"paragraph"},{"text":"Lighter Toolkit Components","anchor":"Lighter-Toolkit-Components","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The toolkit consists of four major parts:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The “Lighter” "},{"type":"strong","inlineContent":[{"text":"support library","type":"text"}]},{"text":" (only intended to be used in combination with","type":"text"},{"type":"text","text":" "},{"text":"generated code, not as a standalone library). It is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"optional"}]},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The “Enlighter” Swift 5.6 ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"build plugin"}]},{"type":"text","text":""},{"text":" ","type":"text"},{"text":"for Xcode and the Swift Package Manager.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “Generate Code for SQLite3” Swift 5.6 "},{"type":"strong","inlineContent":[{"type":"text","text":"command plugin"}]},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for Xcode and Swift Package Manager"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “sqlite2swift” "},{"inlineContent":[{"type":"text","text":"tool"}],"type":"strong"},{"type":"text","text":" that can be used to generate SQLite code if the"},{"text":" ","type":"text"},{"type":"text","text":"environment doesn’t allow for Xcode 14 or Swift 5.6 yet (the generated code"},{"type":"text","text":" "},{"text":"runs against earlier version).","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"There is also the the"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/apps.apple.com\/us\/app\/code-for-sqlite3\/id1638111010","type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"A macOS app that does the same like “sqlite2swift”, but as an app.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If you want to support this project, consider buying a copy. Thank you!"}],"type":"paragraph"},{"inlineContent":[{"text":"There are two associated repositories:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/Lighter-swift\/Examples\/","isActive":true},{"text":":","type":"text"},{"text":" ","type":"text"},{"text":"Contains examples on how to use the toolset, including a few SwiftUI","type":"text"},{"type":"text","text":" "},{"type":"text","text":"applications and even a server side API."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/Northwind-swift\/NorthwindSQLite.swift","isActive":true,"type":"reference"},{"text":":","type":"text"},{"type":"text","text":" "},{"text":"A version of the Microsoft Access 2000 Northwind sample database,","type":"text"},{"type":"text","text":" "},{"text":"re-engineered for SQLite3, and packaged up as a Swift package","type":"text"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/Northwind-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/"},{"text":")!","type":"text"}]}]}]}]}],"metadata":{"role":"collection","modules":[{"name":"Lighter.swift for SQLite3"}],"title":"Lighter.swift for SQLite3","externalID":"Lighter","symbolKind":"module","roleHeading":"Framework"},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/GettingStarted","doc:\/\/Lighter\/documentation\/Lighter\/LighterAPI","doc:\/\/Lighter\/documentation\/Lighter\/Northwind"]},{"identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/Configuration","doc:\/\/Lighter\/documentation\/Lighter\/Linux","doc:\/\/Lighter\/documentation\/Lighter\/Manual","doc:\/\/Lighter\/documentation\/Lighter\/SQLiteAPI","doc:\/\/Lighter\/documentation\/Lighter\/Mapping","doc:\/\/Lighter\/documentation\/Lighter\/Migrations","doc:\/\/Lighter\/documentation\/Lighter\/Performance"],"title":"Advanced"},{"identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/Who","doc:\/\/Lighter\/documentation\/Lighter\/FAQ","doc:\/\/Lighter\/documentation\/Lighter\/Troubleshooting"],"title":"Support"},{"title":"Classes","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLChangeTransaction","doc:\/\/Lighter\/documentation\/Lighter\/SQLConnectionHandler","doc:\/\/Lighter\/documentation\/Lighter\/SQLTransaction"]},{"title":"Protocols","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueChange","doc:\/\/Lighter\/documentation\/Lighter\/SQLCreatableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncChangeOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncFetchOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseChangeOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseFetchOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLEntitySchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLForeignKeyColumn","doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLSwiftMatchableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLTableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLValueChanges","doc:\/\/Lighter\/documentation\/Lighter\/SQLViewRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLViewSchema"]},{"identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/LighterError","doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn","doc:\/\/Lighter\/documentation\/Lighter\/MappedColumnValueChange","doc:\/\/Lighter\/documentation\/Lighter\/MappedForeignKey","doc:\/\/Lighter\/documentation\/Lighter\/SQLBuilder","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnComparisonPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValuePredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueRangePredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueSetPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLCompoundPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLError","doc:\/\/Lighter\/documentation\/Lighter\/SQLExpression","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolation","doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordDiffingState","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLTruePredicate"],"title":"Structures"},{"title":"Enumerations","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLSortOrder","doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType","doc:\/\/Lighter\/documentation\/Lighter\/SQLiteRawConversionError"]},{"title":"Extended Modules","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/Foundation","doc:\/\/Lighter\/documentation\/Lighter\/Swift"]}],"variants":[{"paths":["\/documentation\/lighter"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"type":"strong","inlineContent":[{"type":"text","text":"very"}]},{"type":"text","text":", fast. Dependency free."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lighter\/documentation\/Lighter"},"references":{"https://github.com/Northwind-swift/NorthwindSQLite.swift":{"identifier":"https:\/\/github.com\/Northwind-swift\/NorthwindSQLite.swift","title":"NorthwindSQLite.swift","titleInlineContent":[{"type":"text","text":"NorthwindSQLite.swift"}],"url":"https:\/\/github.com\/Northwind-swift\/NorthwindSQLite.swift","type":"link"},"doc://Lighter/documentation/Lighter/SQLViewSchema":{"abstract":[{"type":"text","text":"The schema information for either a SQLite view."}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLViewSchema"}],"navigatorTitle":[{"kind":"identifier","text":"SQLViewSchema"}],"url":"\/documentation\/lighter\/sqlviewschema","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLViewSchema","kind":"symbol","title":"SQLViewSchema","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLColumnValueSetPredicate":{"kind":"symbol","abstract":[{"text":"A predicate that matches a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","isActive":true},{"type":"text","text":" of a table\/view against"},{"type":"text","text":" "},{"text":"a set of values.","type":"text"}],"navigatorTitle":[{"text":"SQLColumnValueSetPredicate","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlcolumnvaluesetpredicate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLColumnValueSetPredicate","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueSetPredicate","title":"SQLColumnValueSetPredicate","type":"topic"},"doc://Lighter/documentation/Lighter/SQLColumnComparisonPredicate":{"title":"SQLColumnComparisonPredicate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLColumnComparisonPredicate","kind":"identifier"}],"abstract":[{"type":"text","text":"A predicate that compares two "},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","isActive":true},{"text":"s of a table\/view against","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"each other."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumnComparisonPredicate"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnComparisonPredicate","url":"\/documentation\/lighter\/sqlcolumncomparisonpredicate"},"doc://Lighter/documentation/Lighter/SQLSwiftMatchableSchema":{"abstract":[{"type":"text","text":"An entity schema which supports selects that filter using a Swift closure"},{"type":"text","text":" "},{"type":"text","text":"(vs a SQL "},{"type":"codeVoice","code":"WHERE"},{"type":"text","text":" condition)."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLSwiftMatchableSchema","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLSwiftMatchableSchema","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLSwiftMatchableSchema"}],"url":"\/documentation\/lighter\/sqlswiftmatchableschema","title":"SQLSwiftMatchableSchema"},"doc://Lighter/documentation/Lighter/SQLDeletableSchema":{"abstract":[{"text":"The schema information for either a SQLite table or view that allows","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deletions."}],"role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableSchema","navigatorTitle":[{"text":"SQLDeletableSchema","kind":"identifier"}],"title":"SQLDeletableSchema","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLDeletableSchema","kind":"identifier"}],"url":"\/documentation\/lighter\/sqldeletableschema"},"https://Northwind-swift.github.io/NorthwindSQLite.swift/documentation/northwind/":{"url":"https:\/\/Northwind-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/","identifier":"https:\/\/Northwind-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/","type":"link","title":"DocC Documentation","titleInlineContent":[{"type":"text","text":"DocC Documentation"}]},"doc://Lighter/documentation/Lighter/SQLiteRawConversionError":{"title":"SQLiteRawConversionError","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteRawConversionError","kind":"symbol","abstract":[{"type":"text","text":"An error happened while converting between SQLite types and a"},{"text":" ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/lighter\/sqliterawconversionerror","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLiteRawConversionError","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"SQLiteRawConversionError","kind":"identifier"}]},"doc://Lighter/documentation/Lighter/Linux":{"kind":"article","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Linux","role":"article","url":"\/documentation\/lighter\/linux","type":"topic","abstract":[{"text":"Using Lighter on Linux.","type":"text"}],"title":"Linux"},"doc://Lighter/documentation/Lighter/SQLExpression":{"type":"topic","role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLExpression","abstract":[{"type":"text","text":"A raw SQL expression, that can use string interpolation to generate"},{"text":" ","type":"text"},{"text":"proper values.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"navigatorTitle":[{"kind":"identifier","text":"SQLExpression"}],"title":"SQLExpression","kind":"symbol","url":"\/documentation\/lighter\/sqlexpression"},"doc://Lighter/documentation/Lighter/SQLKeyedTableSchema":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SQLKeyedTableSchema","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lighter\/sqlkeyedtableschema","navigatorTitle":[{"kind":"identifier","text":"SQLKeyedTableSchema"}],"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableSchema","role":"symbol","title":"SQLKeyedTableSchema","abstract":[{"type":"text","text":"The schema information for either a SQLite table with a single primary key."}]},"https://github.com/SwiftGen/SwiftGen":{"type":"link","title":"SwiftGen","identifier":"https:\/\/github.com\/SwiftGen\/SwiftGen","url":"https:\/\/github.com\/SwiftGen\/SwiftGen","titleInlineContent":[{"text":"SwiftGen","type":"text"}]},"doc://Lighter/documentation/Lighter/SQLChangeTransaction":{"kind":"symbol","url":"\/documentation\/lighter\/sqlchangetransaction","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SQLChangeTransaction","kind":"identifier"}],"navigatorTitle":[{"text":"SQLChangeTransaction","kind":"identifier"}],"title":"SQLChangeTransaction","abstract":[{"type":"text","text":"A SQL transaction allows the user to run multiple SQL operations"},{"type":"text","text":" "},{"type":"text","text":"as a single, atomic unit."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLChangeTransaction","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLUpdatableSchema":{"navigatorTitle":[{"text":"SQLUpdatableSchema","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableSchema","kind":"symbol","url":"\/documentation\/lighter\/sqlupdatableschema","abstract":[{"type":"text","text":"The schema information for either a SQLite table or view that allows"},{"type":"text","text":" "},{"type":"text","text":"updates."}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLUpdatableSchema","kind":"identifier"}],"title":"SQLUpdatableSchema"},"doc://Lighter/documentation/Lighter/SQLTruePredicate":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTruePredicate","title":"SQLTruePredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTruePredicate"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a predicate that always matches.","type":"text"}],"url":"\/documentation\/lighter\/sqltruepredicate","navigatorTitle":[{"kind":"identifier","text":"SQLTruePredicate"}]},"doc://Lighter/documentation/Lighter/SQLDatabaseChangeOperations":{"url":"\/documentation\/lighter\/sqldatabasechangeoperations","navigatorTitle":[{"text":"SQLDatabaseChangeOperations","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseChangeOperations","type":"topic","abstract":[{"type":"text","text":"A mixin protocol to add record update\/insert\/delete functions."}],"title":"SQLDatabaseChangeOperations","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLDatabaseChangeOperations"}]},"doc://Lighter/documentation/Lighter/MappedColumnValueChange":{"abstract":[{"type":"text","text":"A concrete implementation of the "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueChange","isActive":true,"type":"reference"},{"text":" protocol.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MappedColumnValueChange"}],"url":"\/documentation\/lighter\/mappedcolumnvaluechange","navigatorTitle":[{"text":"MappedColumnValueChange","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumnValueChange","title":"MappedColumnValueChange","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLConnectionHandler":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLConnectionHandler","type":"topic","role":"symbol","navigatorTitle":[{"text":"SQLConnectionHandler","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlconnectionhandler","abstract":[{"text":"An object used to open a database connection.","type":"text"}],"title":"SQLConnectionHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLConnectionHandler"}]},"doc://Lighter/documentation/Lighter/SQLColumnValuePredicate":{"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValuePredicate","url":"\/documentation\/lighter\/sqlcolumnvaluepredicate","title":"SQLColumnValuePredicate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLColumnValuePredicate","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A predicate that compares a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","type":"reference"},{"type":"text","text":" of a table\/view against"},{"type":"text","text":" "},{"text":"a literal value.","type":"text"}],"navigatorTitle":[{"text":"SQLColumnValuePredicate","kind":"identifier"}]},"doc://Lighter/documentation/Lighter/SQLDatabaseFetchOperations":{"navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseFetchOperations"}],"abstract":[{"text":"A mixin protocol to add “select” functions.","type":"text"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseFetchOperations","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLDatabaseFetchOperations"}],"title":"SQLDatabaseFetchOperations","url":"\/documentation\/lighter\/sqldatabasefetchoperations","type":"topic","kind":"symbol","role":"symbol"},"doc://Lighter/documentation/Lighter/MappedColumn":{"title":"MappedColumn","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MappedColumn","kind":"identifier"}],"abstract":[{"type":"text","text":"A concrete implementation of the "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","type":"reference","isActive":true},{"text":" protocol.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"MappedColumn","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn","url":"\/documentation\/lighter\/mappedcolumn"},"doc://Lighter/documentation/Lighter":{"url":"\/documentation\/lighter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Lighter\/documentation\/Lighter","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"inlineContent":[{"type":"text","text":"very"}],"type":"strong"},{"type":"text","text":", fast. Dependency free."}]},"doc://Lighter/documentation/Lighter/SQLRecord":{"url":"\/documentation\/lighter\/sqlrecord","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLRecord"},{"text":" is an abstract protocol representing a set of columns fetched","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from a database."}],"title":"SQLRecord","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLRecord"}],"navigatorTitle":[{"kind":"identifier","text":"SQLRecord"}]},"doc://Lighter/documentation/Lighter/SQLNotPredicate":{"role":"symbol","title":"SQLNotPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLNotPredicate"}],"url":"\/documentation\/lighter\/sqlnotpredicate","navigatorTitle":[{"kind":"identifier","text":"SQLNotPredicate"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","abstract":[{"text":"A predicate that negates the outcome of another.","type":"text"}],"kind":"symbol","type":"topic"},"doc://Lighter/documentation/Lighter/SQLDatabaseAsyncFetchOperations":{"title":"SQLDatabaseAsyncFetchOperations","type":"topic","url":"\/documentation\/lighter\/sqldatabaseasyncfetchoperations","abstract":[{"text":"A mixin protocol to add async\/await variants of the “select”","type":"text"},{"text":" ","type":"text"},{"text":"functions.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseAsyncFetchOperations"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncFetchOperations","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseAsyncFetchOperations"}]},"doc://Lighter/documentation/Lighter/SQLDatabaseAsyncChangeOperations":{"title":"SQLDatabaseAsyncChangeOperations","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncChangeOperations","kind":"symbol","abstract":[{"type":"text","text":"Asynchronous operations that change the database."}],"type":"topic","url":"\/documentation\/lighter\/sqldatabaseasyncchangeoperations","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLDatabaseAsyncChangeOperations","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"SQLDatabaseAsyncChangeOperations","kind":"identifier"}]},"doc://Lighter/documentation/Lighter/SQLRecordDiffingState":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordDiffingState","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLRecordDiffingState"}],"url":"\/documentation\/lighter\/sqlrecorddiffingstate","abstract":[{"text":"A helper object for record diffing.","type":"text"}],"navigatorTitle":[{"text":"SQLRecordDiffingState","kind":"identifier"}],"title":"SQLRecordDiffingState","kind":"symbol"},"doc://Lighter/documentation/Lighter/SQLTransaction":{"type":"topic","navigatorTitle":[{"text":"SQLTransaction","kind":"identifier"}],"url":"\/documentation\/lighter\/sqltransaction","title":"SQLTransaction","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransaction","abstract":[{"type":"text","text":"A SQL transaction allows the user to run multiple SQL operations"},{"type":"text","text":" "},{"type":"text","text":"as a single, atomic unit."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLTransaction"}],"kind":"symbol","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLInterpolation":{"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SQLInterpolation","kind":"identifier"}],"title":"SQLInterpolation","url":"\/documentation\/lighter\/sqlinterpolation","kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolation","type":"topic","role":"symbol","navigatorTitle":[{"text":"SQLInterpolation","kind":"identifier"}]},"doc://Lighter/documentation/Lighter/Manual":{"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Manual","kind":"article","title":"Manual Generation","url":"\/documentation\/lighter\/manual","abstract":[{"type":"text","text":"How to generate Lighter content by hand."}],"role":"article"},"doc://Lighter/documentation/Lighter/SQLDatabaseAsyncOperations":{"navigatorTitle":[{"text":"SQLDatabaseAsyncOperations","kind":"identifier"}],"kind":"symbol","type":"topic","title":"SQLDatabaseAsyncOperations","url":"\/documentation\/lighter\/sqldatabaseasyncoperations","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLDatabaseAsyncOperations"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncOperations","abstract":[{"text":"An object that can host asynchronous operations.","type":"text"}],"role":"symbol"},"doc://Lighter/documentation/Lighter/Swift":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Swift","type":"topic","kind":"symbol","url":"\/documentation\/lighter\/swift","abstract":[],"title":"Swift","role":"collection"},"doc://Lighter/documentation/Lighter/SQLRecordFetchOperations":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLRecordFetchOperations"}],"title":"SQLRecordFetchOperations","url":"\/documentation\/lighter\/sqlrecordfetchoperations","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLRecordFetchOperations","kind":"identifier"}],"abstract":[{"type":"text","text":"Runs fetch queries against a certain SQL table\/view."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations"},"doc://Lighter/documentation/Lighter/SQLColumn":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","type":"topic","role":"symbol","navigatorTitle":[{"text":"SQLColumn","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlcolumn","abstract":[{"type":"text","text":"Represents a SQL table or view column."}],"title":"SQLColumn","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLColumn"}]},"doc://Lighter/documentation/Lighter/FAQ":{"kind":"article","url":"\/documentation\/lighter\/faq","type":"topic","abstract":[{"text":"A collection of questions and possible answers.","type":"text"}],"title":"Frequently Asked Questions","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/FAQ","role":"article"},"doc://Lighter/documentation/Lighter/SQLEntitySchema":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLEntitySchema"}],"abstract":[{"text":"The schema information for either a SQLite table or view.","type":"text"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLEntitySchema","navigatorTitle":[{"text":"SQLEntitySchema","kind":"identifier"}],"title":"SQLEntitySchema","role":"symbol","type":"topic","url":"\/documentation\/lighter\/sqlentityschema"},"doc://Lighter/documentation/Lighter/SQLDeletableRecord":{"title":"SQLDeletableRecord","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableRecord","url":"\/documentation\/lighter\/sqldeletablerecord","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLDeletableRecord","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","isActive":true},{"text":" that supports deletion.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"SQLDeletableRecord","kind":"identifier"}]},"doc://Lighter/documentation/Lighter/LighterAPI":{"abstract":[{"text":"Using the Lighter API.","type":"text"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/LighterAPI","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/lighter\/lighterapi","title":"Lighter API Overview"},"doc://Lighter/documentation/Lighter/GettingStarted":{"title":"Getting Started","url":"\/documentation\/lighter\/gettingstarted","role":"article","kind":"article","abstract":[{"text":"Setting up Lighter for network caches or as resource databases.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/GettingStarted"},"doc://Lighter/documentation/Lighter/Performance":{"kind":"article","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Performance","role":"article","url":"\/documentation\/lighter\/performance","type":"topic","abstract":[{"text":"A quick look at Lighter performance.","type":"text"}],"title":"Performance"},"doc://Lighter/documentation/Lighter/SQLCreationStatementsHolder/creationSQL":{"required":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder\/creationSQL","type":"topic","abstract":[{"type":"text","text":"SQL "},{"code":"CREATE","type":"codeVoice"},{"type":"text","text":" statements (e.g. "},{"code":"CREATE TABLE person (...)","type":"codeVoice"},{"text":").","type":"text"}],"title":"creationSQL","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"creationSQL"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"url":"\/documentation\/lighter\/sqlcreationstatementsholder\/creationsql","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLCompoundPredicate":{"title":"SQLCompoundPredicate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLCompoundPredicate"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCompoundPredicate","url":"\/documentation\/lighter\/sqlcompoundpredicate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCompoundPredicate"}],"abstract":[{"text":"A predicate that joins two predicates by either ","type":"text"},{"code":"AND","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"OR"},{"type":"text","text":"."}],"type":"topic","kind":"symbol"},"doc://Lighter/documentation/Lighter/SQLViewRecord":{"role":"symbol","navigatorTitle":[{"text":"SQLViewRecord","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLViewRecord","type":"topic","title":"SQLViewRecord","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLViewRecord"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"SQLViewRecord","type":"codeVoice"},{"text":" is a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"text":" that is tied to a table specifically.","type":"text"}],"url":"\/documentation\/lighter\/sqlviewrecord"},"doc://Lighter/documentation/Lighter/SQLTableSchema":{"role":"symbol","navigatorTitle":[{"text":"SQLTableSchema","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableSchema","type":"topic","title":"SQLTableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SQLTableSchema","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lighter\/sqltableschema","abstract":[{"text":"The schema information for either a SQLite table.","type":"text"}]},"doc://Lighter/documentation/Lighter/SQLiteAPI":{"kind":"article","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteAPI","role":"article","url":"\/documentation\/lighter\/sqliteapi","type":"topic","abstract":[{"text":"Using the dependency-free SQLite API.","type":"text"}],"title":"Dependency-Free API"},"doc://Lighter/documentation/Lighter/SQLKeyedTableRecord":{"title":"SQLKeyedTableRecord","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLKeyedTableRecord","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLKeyedTableRecord"},{"type":"text","text":" is a "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableRecord","type":"reference","isActive":true},{"type":"text","text":"(a "},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","isActive":true},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"that is tied to a table with a single primary key."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLKeyedTableRecord"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableRecord","url":"\/documentation\/lighter\/sqlkeyedtablerecord"},"doc://Lighter/documentation/Lighter/Northwind":{"abstract":[{"text":"Using the Northwind example database.","type":"text"}],"url":"\/documentation\/lighter\/northwind","kind":"article","role":"article","type":"topic","title":"Northwind","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Northwind"},"doc://Lighter/documentation/Lighter/SQLDatabase":{"role":"symbol","abstract":[{"type":"text","text":"A type representing a SQLite3 database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLDatabase","kind":"identifier"}],"kind":"symbol","title":"SQLDatabase","navigatorTitle":[{"text":"SQLDatabase","kind":"identifier"}],"url":"\/documentation\/lighter\/sqldatabase","type":"topic"},"doc://Lighter/documentation/Lighter/SQLTableRecord":{"url":"\/documentation\/lighter\/sqltablerecord","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableRecord","title":"SQLTableRecord","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLTableRecord","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"code":"SQLTableRecord","type":"codeVoice"},{"type":"text","text":" is a "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","type":"reference","isActive":true},{"type":"text","text":" that is tied to a table specifically."}],"navigatorTitle":[{"kind":"identifier","text":"SQLTableRecord"}]},"doc://Lighter/documentation/Lighter/SQLForeignKeyColumn":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLForeignKeyColumn"}],"title":"SQLForeignKeyColumn","url":"\/documentation\/lighter\/sqlforeignkeycolumn","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLForeignKeyColumn","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","isActive":true},{"text":" that is a (single) foreign key targetting a different column","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in another table."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLForeignKeyColumn"},"https://www.sqlite.org":{"url":"https:\/\/www.sqlite.org","titleInlineContent":[{"text":"SQLite3","type":"text"}],"title":"SQLite3","type":"link","identifier":"https:\/\/www.sqlite.org"},"https://Northwind-swift.github.io/NorthwindSQLite.swift/documentation/northwind/employee":{"titleInlineContent":[{"text":"Example","type":"text"}],"type":"link","identifier":"https:\/\/Northwind-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/employee","title":"Example","url":"https:\/\/Northwind-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/employee"},"doc://Lighter/documentation/Lighter/Migrations":{"kind":"article","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Migrations","role":"article","url":"\/documentation\/lighter\/migrations","type":"topic","abstract":[{"text":"Detecting schema changes and performing schema upgrades.","type":"text"}],"title":"Migrations"},"doc://Lighter/documentation/Lighter/SQLCreationStatementsHolder":{"abstract":[{"type":"text","text":"A type that holds SQL "},{"type":"codeVoice","code":"CREATE"},{"type":"text","text":" statements in the "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder\/creationSQL","type":"reference","isActive":true},{"type":"text","text":" property."}],"url":"\/documentation\/lighter\/sqlcreationstatementsholder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLCreationStatementsHolder"}],"role":"symbol","type":"topic","title":"SQLCreationStatementsHolder","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLCreationStatementsHolder","kind":"identifier"}]},"doc://Lighter/documentation/Lighter/Troubleshooting":{"abstract":[{"type":"text","text":"When the plugin doesn’t generate."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Troubleshooting","url":"\/documentation\/lighter\/troubleshooting","kind":"article","type":"topic","title":"Troubleshooting","role":"article"},"doc://Lighter/documentation/Lighter/Foundation":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Foundation","abstract":[],"title":"Foundation","url":"\/documentation\/lighter\/foundation","type":"topic","kind":"symbol","role":"collection"},"doc://Lighter/documentation/Lighter/SQLColumnValueChange":{"abstract":[{"text":"Represents a value change in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" that is attached to a"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableRecord","type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLColumnValueChange","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlcolumnvaluechange","navigatorTitle":[{"text":"SQLColumnValueChange","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueChange","title":"SQLColumnValueChange","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate":{"abstract":[{"type":"text","text":"A predicate containing raw SQL, that can use string interpolation to generate"},{"type":"text","text":" "},{"type":"text","text":"proper values."}],"navigatorTitle":[{"text":"SQLInterpolatedPredicate","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","type":"topic","title":"SQLInterpolatedPredicate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLInterpolatedPredicate","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlinterpolatedpredicate"},"doc://Lighter/documentation/Lighter/SQLInsertableRecord":{"title":"SQLInsertableRecord","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableRecord","kind":"symbol","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":" that supports insertion."}],"type":"topic","url":"\/documentation\/lighter\/sqlinsertablerecord","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInsertableRecord"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLInsertableRecord"}]},"https://github.com/Lighter-swift/Examples/":{"url":"https:\/\/github.com\/Lighter-swift\/Examples\/","titleInlineContent":[{"text":"Examples","type":"text"}],"title":"Examples","type":"link","identifier":"https:\/\/github.com\/Lighter-swift\/Examples\/"},"doc://Lighter/documentation/Lighter/SQLError":{"navigatorTitle":[{"kind":"identifier","text":"SQLError"}],"kind":"symbol","type":"topic","title":"SQLError","url":"\/documentation\/lighter\/sqlerror","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLError","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLError","abstract":[{"type":"text","text":"A raw SQLite3 error."}],"role":"symbol"},"doc://Lighter/documentation/Lighter/LighterError":{"kind":"symbol","title":"LighterError","url":"\/documentation\/lighter\/lightererror","role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/LighterError","navigatorTitle":[{"text":"LighterError","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"An error that is thrown by Lighter database operations."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LighterError"}]},"doc://Lighter/documentation/Lighter/SQLUpdatableRecord":{"title":"SQLUpdatableRecord","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLUpdatableRecord"}],"abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","type":"reference","isActive":true},{"type":"text","text":" that supports updates."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"SQLUpdatableRecord","kind":"identifier"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableRecord","url":"\/documentation\/lighter\/sqlupdatablerecord"},"doc://Lighter/documentation/Lighter/SQLDatabaseOperations":{"abstract":[{"text":"A protocol that can be implemented by objects that allow for database","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operations. I.e. "},{"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase","isActive":true},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransaction"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"SQLDatabaseOperations","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLDatabaseOperations","kind":"identifier"}],"url":"\/documentation\/lighter\/sqldatabaseoperations","title":"SQLDatabaseOperations","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseOperations"},"doc://Lighter/documentation/Lighter/Configuration":{"role":"article","url":"\/documentation\/lighter\/configuration","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Configuration","type":"topic","kind":"article","title":"Configuration","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Lighter.json"},{"text":" configuration file.","type":"text"}]},"doc://Lighter/documentation/Lighter/SQLTransactionType":{"url":"\/documentation\/lighter\/sqltransactiontype","title":"SQLTransactionType","abstract":[{"text":"The transaction type defines whether a transaction needs write access","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and in non-WAL mode, whether a transaction is exclusive (i.e. forbids"},{"type":"text","text":" "},{"type":"text","text":"concurrent reads)."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLTransactionType"}],"type":"topic","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTransactionType"}]},"doc://Lighter/documentation/Lighter/MappedForeignKey":{"abstract":[{"type":"text","text":"A concrete implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLForeignKeyColumn"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedForeignKey","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MappedForeignKey","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MappedForeignKey"}],"url":"\/documentation\/lighter\/mappedforeignkey","title":"MappedForeignKey"},"doc://Lighter/documentation/Lighter/Who":{"abstract":[{"type":"text","text":"Built by @helje5."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Who","title":"Support","kind":"article","type":"topic","url":"\/documentation\/lighter\/who","role":"article"},"doc://Lighter/documentation/Lighter/SQLSortOrder":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLSortOrder","type":"topic","role":"symbol","navigatorTitle":[{"text":"SQLSortOrder","kind":"identifier"}],"abstract":[{"type":"text","text":"The sort order that can be applied in select. Ascending or descending."}],"url":"\/documentation\/lighter\/sqlsortorder","title":"SQLSortOrder","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SQLSortOrder","kind":"identifier"}]},"https://apps.apple.com/us/app/code-for-sqlite3/id1638111010":{"titleInlineContent":[{"text":"“Code for SQLite3” application","type":"text"}],"type":"link","identifier":"https:\/\/apps.apple.com\/us\/app\/code-for-sqlite3\/id1638111010","title":"“Code for SQLite3” application","url":"https:\/\/apps.apple.com\/us\/app\/code-for-sqlite3\/id1638111010"},"doc://Lighter/documentation/Lighter/SQLValueChanges":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLValueChanges"}],"url":"\/documentation\/lighter\/sqlvaluechanges","title":"SQLValueChanges","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLValueChanges","abstract":[{"text":"Types conforming to this protocol can diff themselves against each other.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLValueChanges"}],"kind":"symbol","role":"symbol"},"doc://Lighter/documentation/Lighter/SQLBuilder":{"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLBuilder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLBuilder","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"SQLBuilder","navigatorTitle":[{"text":"SQLBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A helper struct to build SQL queries."}],"url":"\/documentation\/lighter\/sqlbuilder","type":"topic"},"doc://Lighter/documentation/Lighter/Mapping":{"url":"\/documentation\/lighter\/mapping","role":"collectionGroup","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Mapping","abstract":[{"type":"text","text":"Mapping Data retrieved from the Database."}],"title":"Mapping","type":"topic","kind":"article"},"doc://Lighter/documentation/Lighter/SQLCreatableSchema":{"role":"symbol","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreatableSchema","title":"SQLCreatableSchema","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLCreatableSchema","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A schema that contains the SQL necessary to create the entity","type":"text"}],"url":"\/documentation\/lighter\/sqlcreatableschema","navigatorTitle":[{"kind":"identifier","text":"SQLCreatableSchema"}]},"doc://Lighter/documentation/Lighter/SQLInsertableSchema":{"type":"topic","role":"symbol","title":"SQLInsertableSchema","identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableSchema","abstract":[{"type":"text","text":"The schema information for either a SQLite table or view that allows"},{"type":"text","text":" "},{"type":"text","text":"insertion."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInsertableSchema"}],"navigatorTitle":[{"text":"SQLInsertableSchema","kind":"identifier"}],"url":"\/documentation\/lighter\/sqlinsertableschema"},"doc://Lighter/documentation/Lighter/SQLColumnValueRangePredicate":{"navigatorTitle":[{"kind":"identifier","text":"SQLColumnValueRangePredicate"}],"abstract":[{"text":"A predicate that matches a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"text":" of a table\/view against","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a range of values."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueRangePredicate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLColumnValueRangePredicate","kind":"identifier"}],"title":"SQLColumnValueRangePredicate","url":"\/documentation\/lighter\/sqlcolumnvaluerangepredicate","type":"topic","kind":"symbol","role":"symbol"}}}