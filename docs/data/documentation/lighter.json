{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Lighter"}]},{"type":"text","text":" is a Swift toolset to work with "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.sqlite.org"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"databases  in a way that is "},{"type":"strong","inlineContent":[{"type":"text","text":"typesafe"}]},{"type":"text","text":" not just on the Swift side,"},{"type":"text","text":" "},{"type":"text","text":"but "},{"type":"strong","inlineContent":[{"type":"text","text":"down to the SQL schema"}]},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Like "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/SwiftGen\/SwiftGen"},{"type":"text","text":" but for SQLite."},{"type":"text","text":" "},{"type":"text","text":"It is "},{"type":"strong","inlineContent":[{"type":"text","text":"not an ORM"}]},{"type":"text","text":", it doesn’t do type mapping at runtime."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like SQLite, the Lighter toolset is very versatile, highly configurable, and"},{"type":"text","text":" "},{"type":"text","text":"applicable to a wide range of applications and project setups."},{"type":"text","text":" "},{"type":"text","text":"From caches in iOS apps, or documents in Mac apps, to server side datasets."},{"type":"text","text":" "},{"type":"text","text":"It isn’t just a single tool, it is a set of tools for different usage scenarios."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In short, it takes SQL (or binary SQLite) files like this:"}]},{"type":"codeListing","syntax":"sql","code":["CREATE TABLE person (","  person_id INTEGER PRIMARY KEY NOT NULL,","  name      TEXT NOT NULL,","  title     TEXT NULL",");"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and generates Swift code like this:"}]},{"type":"codeListing","syntax":"swift","code":["struct ContactsDB {","","  struct Person: Identifiable, Hashable, Codable {","    var id       : Int","    var name     : String","    var title    : String?","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alongside the necessary code to work with the tables in the database:"}]},{"type":"codeListing","syntax":"swift","code":["let people = try await db.people.fetch { $0.name.hasPrefix(\"Bour\") }","var jason  = people[0]","jason.name = \"Bourne!\"","try await db.transaction { tx in","  try tx.update(jason)","  try tx.insert(jason)","  try tx.delete(jason)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It works with async\/await, or without,"},{"type":"text","text":" "},{"type":"text","text":"with a supporting library (Lighter), or dependency free."},{"type":"text","text":" "},{"type":"text","text":"Lighter knows about relationships contained in the database and can also"},{"type":"text","text":" "},{"type":"text","text":"generate code to resolve those:"}]},{"type":"codeListing","syntax":"swift","code":["let product = try await db.products.find(42)","let orders  = try await db.orders.fetch(for: product)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If desired, it generates beautiful DocC documentation within the generated code"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"https:\/\/lighter-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/employee"},{"type":"text","text":")."}]},{"anchor":"Lighter-Toolkit-Components","level":2,"type":"heading","text":"Lighter Toolkit Components"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The toolkit consists of four major parts:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “Lighter” "},{"type":"strong","inlineContent":[{"type":"text","text":"support library"}]},{"type":"text","text":" (only intended to be used in combination with"},{"type":"text","text":" "},{"type":"text","text":"generated code, not as a standalone library). It is "},{"type":"strong","inlineContent":[{"type":"text","text":"optional"}]},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “Enlighter” Swift 5.6 "},{"type":"strong","inlineContent":[{"type":"text","text":"build plugin"}]},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"for Xcode and the Swift Package Manager."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “Generate Code for SQLite3” Swift 5.6 "},{"type":"strong","inlineContent":[{"type":"text","text":"command plugin"}]},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"for Xcode and Swift Package Manager"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “swift2sqlite3” "},{"type":"strong","inlineContent":[{"type":"text","text":"tool"}]},{"type":"text","text":" that can be used to generate SQLite code if the"},{"type":"text","text":" "},{"type":"text","text":"environment doesn’t allow for Xcode 14 or Swift 5.6 yet (the generated code"},{"type":"text","text":" "},{"type":"text","text":"runs against earlier version)."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is also the the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/apps.apple.com\/us\/app\/code-for-sqlite3\/id1638111010"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"A macOS app that does the same like “swift2sqlite3”, but as an app."},{"type":"text","text":" "},{"type":"text","text":"If you want to support this project, consider buying a copy. Thank you!"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two associated repositories:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Lighter-swift\/Examples\/"},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"Contains examples on how to use the toolset, including a few SwiftUI"},{"type":"text","text":" "},{"type":"text","text":"applications and even a server side API."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Lighter-swift\/NorthwindSQLite.swift"},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"A version of the Microsoft Access 2000 Northwind sample database,"},{"type":"text","text":" "},{"type":"text","text":"re-engineered for SQLite3, and packaged up as a Swift package"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"https:\/\/lighter-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/"},{"type":"text","text":")!"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/lighter"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lighter\/documentation\/Lighter","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"type":"strong","inlineContent":[{"type":"text","text":"very"}]},{"type":"text","text":", fast. Dependency free."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Lighter","title":"Lighter.swift for SQLite3","symbolKind":"module","role":"collection","modules":[{"name":"Lighter.swift for SQLite3"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/GettingStarted","doc:\/\/Lighter\/documentation\/Lighter\/LighterAPI","doc:\/\/Lighter\/documentation\/Lighter\/Northwind"]},{"title":"Advanced","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/Configuration","doc:\/\/Lighter\/documentation\/Lighter\/Linux","doc:\/\/Lighter\/documentation\/Lighter\/Manual","doc:\/\/Lighter\/documentation\/Lighter\/SQLiteAPI","doc:\/\/Lighter\/documentation\/Lighter\/Mapping","doc:\/\/Lighter\/documentation\/Lighter\/Migrations","doc:\/\/Lighter\/documentation\/Lighter\/Performance"]},{"title":"Support","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/Who","doc:\/\/Lighter\/documentation\/Lighter\/FAQ","doc:\/\/Lighter\/documentation\/Lighter\/Troubleshooting"]},{"title":"Classes","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLChangeTransaction","doc:\/\/Lighter\/documentation\/Lighter\/SQLConnectionHandler","doc:\/\/Lighter\/documentation\/Lighter\/SQLTransaction"]},{"title":"Protocols","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueChange","doc:\/\/Lighter\/documentation\/Lighter\/SQLCreatableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncChangeOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncFetchOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseChangeOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseFetchOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLEntitySchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLForeignKeyColumn","doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLSwiftMatchableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLTableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableSchema","doc:\/\/Lighter\/documentation\/Lighter\/SQLValueChanges","doc:\/\/Lighter\/documentation\/Lighter\/SQLViewRecord","doc:\/\/Lighter\/documentation\/Lighter\/SQLViewSchema"]},{"title":"Structures","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/LighterError","doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn","doc:\/\/Lighter\/documentation\/Lighter\/MappedColumnValueChange","doc:\/\/Lighter\/documentation\/Lighter\/MappedForeignKey","doc:\/\/Lighter\/documentation\/Lighter\/SQLBuilder","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnComparisonPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValuePredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueRangePredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueSetPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLCompoundPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLError","doc:\/\/Lighter\/documentation\/Lighter\/SQLExpression","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolation","doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordDiffingState","doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations","doc:\/\/Lighter\/documentation\/Lighter\/SQLTruePredicate"]},{"title":"Enumerations","identifiers":["doc:\/\/Lighter\/documentation\/Lighter\/SQLSortOrder","doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType"]}],"references":{"doc://Lighter/documentation/Lighter/SQLDatabase":{"role":"symbol","title":"SQLDatabase","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabase"}],"abstract":[{"type":"text","text":"A type representing a SQLite3 database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabase"}],"url":"\/documentation\/lighter\/sqldatabase"},"doc://Lighter/documentation/Lighter/SQLColumnValueChange":{"role":"symbol","title":"SQLColumnValueChange","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLColumnValueChange"}],"abstract":[{"type":"text","text":"Represents a value change in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" that is attached to a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableRecord"},{"type":"text","text":"."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueChange","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumnValueChange"}],"url":"\/documentation\/lighter\/sqlcolumnvaluechange"},"doc://Lighter/documentation/Lighter/SQLKeyedTableSchema":{"role":"symbol","title":"SQLKeyedTableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLKeyedTableSchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite table with a single primary key."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLKeyedTableSchema"}],"url":"\/documentation\/lighter\/sqlkeyedtableschema"},"doc://Lighter/documentation/Lighter/SQLColumn":{"role":"symbol","title":"SQLColumn","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLColumn"}],"abstract":[{"type":"text","text":"Represents a SQL table or view column."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumn"}],"url":"\/documentation\/lighter\/sqlcolumn"},"doc://Lighter/documentation/Lighter/SQLDatabaseAsyncOperations":{"role":"symbol","title":"SQLDatabaseAsyncOperations","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseAsyncOperations"}],"abstract":[{"type":"text","text":"An object that can host asynchronous operations."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseAsyncOperations"}],"url":"\/documentation\/lighter\/sqldatabaseasyncoperations"},"doc://Lighter/documentation/Lighter/SQLTruePredicate":{"role":"symbol","title":"SQLTruePredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTruePredicate"}],"abstract":[{"type":"text","text":"Returns a predicate that always matches."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTruePredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLTruePredicate"}],"url":"\/documentation\/lighter\/sqltruepredicate"},"doc://Lighter/documentation/Lighter/SQLSortOrder":{"role":"symbol","title":"SQLSortOrder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLSortOrder"}],"abstract":[{"type":"text","text":"The sort order that can be applied in select. Ascending or descending."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLSortOrder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLSortOrder"}],"url":"\/documentation\/lighter\/sqlsortorder"},"doc://Lighter/documentation/Lighter/SQLForeignKeyColumn":{"role":"symbol","title":"SQLForeignKeyColumn","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLForeignKeyColumn"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" that is a (single) foreign key targetting a different column"},{"type":"text","text":" "},{"type":"text","text":"in another table."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLForeignKeyColumn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLForeignKeyColumn"}],"url":"\/documentation\/lighter\/sqlforeignkeycolumn"},"doc://Lighter/documentation/Lighter/SQLError":{"role":"symbol","title":"SQLError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLError"}],"abstract":[{"type":"text","text":"A raw SQLite3 error."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLError"}],"url":"\/documentation\/lighter\/sqlerror"},"https://github.com/Lighter-swift/NorthwindSQLite.swift":{"title":"NorthwindSQLite.swift","titleInlineContent":[{"type":"text","text":"NorthwindSQLite.swift"}],"type":"link","identifier":"https:\/\/github.com\/Lighter-swift\/NorthwindSQLite.swift","url":"https:\/\/github.com\/Lighter-swift\/NorthwindSQLite.swift"},"doc://Lighter/documentation/Lighter/SQLConnectionHandler":{"role":"symbol","title":"SQLConnectionHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLConnectionHandler"}],"abstract":[{"type":"text","text":"An object used to open a database connection."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLConnectionHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLConnectionHandler"}],"url":"\/documentation\/lighter\/sqlconnectionhandler"},"doc://Lighter/documentation/Lighter/SQLCreatableSchema":{"role":"symbol","title":"SQLCreatableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLCreatableSchema"}],"abstract":[{"type":"text","text":"A schema that contains the SQL necessary to create the entity"}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreatableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLCreatableSchema"}],"url":"\/documentation\/lighter\/sqlcreatableschema"},"doc://Lighter/documentation/Lighter/SQLBuilder":{"role":"symbol","title":"SQLBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLBuilder"}],"abstract":[{"type":"text","text":"A helper struct to build SQL queries."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLBuilder"}],"url":"\/documentation\/lighter\/sqlbuilder"},"doc://Lighter/documentation/Lighter/Configuration":{"role":"article","title":"Configuration","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Lighter.json"},{"type":"text","text":" configuration file."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Configuration","kind":"article","type":"topic","url":"\/documentation\/lighter\/configuration"},"doc://Lighter/documentation/Lighter/SQLChangeTransaction":{"role":"symbol","title":"SQLChangeTransaction","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLChangeTransaction"}],"abstract":[{"type":"text","text":"A SQL transaction allows the user to run multiple SQL operations"},{"type":"text","text":" "},{"type":"text","text":"as a single, atomic unit."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLChangeTransaction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLChangeTransaction"}],"url":"\/documentation\/lighter\/sqlchangetransaction"},"doc://Lighter/documentation/Lighter/SQLRecord":{"role":"symbol","title":"SQLRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLRecord"},{"type":"text","text":" is an abstract protocol representing a set of columns fetched"},{"type":"text","text":" "},{"type":"text","text":"from a database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLRecord"}],"url":"\/documentation\/lighter\/sqlrecord"},"doc://Lighter/documentation/Lighter/SQLExpression":{"role":"symbol","title":"SQLExpression","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"abstract":[{"type":"text","text":"A raw SQL expression, that can use string interpolation to generate"},{"type":"text","text":" "},{"type":"text","text":"proper values."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLExpression","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLExpression"}],"url":"\/documentation\/lighter\/sqlexpression"},"doc://Lighter/documentation/Lighter/Northwind":{"role":"article","title":"Northwind","abstract":[{"type":"text","text":"Using the Northwind example database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Northwind","kind":"article","type":"topic","url":"\/documentation\/lighter\/northwind"},"doc://Lighter/documentation/Lighter/Linux":{"role":"article","title":"Linux","abstract":[{"type":"text","text":"Using Lighter on Linux."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Linux","kind":"article","type":"topic","url":"\/documentation\/lighter\/linux"},"doc://Lighter/documentation/Lighter/GettingStarted":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"Setting up Lighter for network caches or as resource databases."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/lighter\/gettingstarted"},"doc://Lighter/documentation/Lighter/SQLNotPredicate":{"role":"symbol","title":"SQLNotPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLNotPredicate"}],"abstract":[{"type":"text","text":"A predicate that negates the outcome of another."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLNotPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLNotPredicate"}],"url":"\/documentation\/lighter\/sqlnotpredicate"},"doc://Lighter/documentation/Lighter/Who":{"role":"article","title":"Support","abstract":[{"type":"text","text":"Built by @helje5."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Who","kind":"article","type":"topic","url":"\/documentation\/lighter\/who"},"doc://Lighter/documentation/Lighter/Migrations":{"role":"article","title":"Migrations","abstract":[{"type":"text","text":"Detecting schema changes and performing schema upgrades."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Migrations","kind":"article","type":"topic","url":"\/documentation\/lighter\/migrations"},"doc://Lighter/documentation/Lighter/SQLInterpolation":{"role":"symbol","title":"SQLInterpolation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInterpolation"}],"abstract":[],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLInterpolation"}],"url":"\/documentation\/lighter\/sqlinterpolation"},"doc://Lighter/documentation/Lighter/SQLEntitySchema":{"role":"symbol","title":"SQLEntitySchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLEntitySchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite table or view."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLEntitySchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLEntitySchema"}],"url":"\/documentation\/lighter\/sqlentityschema"},"doc://Lighter/documentation/Lighter/MappedColumnValueChange":{"role":"symbol","title":"MappedColumnValueChange","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MappedColumnValueChange"}],"abstract":[{"type":"text","text":"A concrete implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueChange"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumnValueChange","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MappedColumnValueChange"}],"url":"\/documentation\/lighter\/mappedcolumnvaluechange"},"doc://Lighter/documentation/Lighter/SQLTableRecord":{"role":"symbol","title":"SQLTableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTableRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLTableRecord"},{"type":"text","text":" is a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":" that is tied to a table specifically."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLTableRecord"}],"url":"\/documentation\/lighter\/sqltablerecord"},"doc://Lighter/documentation/Lighter/SQLColumnValueSetPredicate":{"role":"symbol","title":"SQLColumnValueSetPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLColumnValueSetPredicate"}],"abstract":[{"type":"text","text":"A predicate that matches a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" of a table\/view against"},{"type":"text","text":" "},{"type":"text","text":"a set of values."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueSetPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumnValueSetPredicate"}],"url":"\/documentation\/lighter\/sqlcolumnvaluesetpredicate"},"doc://Lighter/documentation/Lighter/SQLUpdatableSchema":{"role":"symbol","title":"SQLUpdatableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLUpdatableSchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite table or view that allows"},{"type":"text","text":" "},{"type":"text","text":"updates."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLUpdatableSchema"}],"url":"\/documentation\/lighter\/sqlupdatableschema"},"https://lighter-swift.github.io/NorthwindSQLite.swift/documentation/northwind/":{"title":"DocC Documentation","titleInlineContent":[{"type":"text","text":"DocC Documentation"}],"type":"link","identifier":"https:\/\/lighter-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/","url":"https:\/\/lighter-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/"},"https://apps.apple.com/us/app/code-for-sqlite3/id1638111010":{"title":"“Code for SQLite3” application","titleInlineContent":[{"type":"text","text":"“Code for SQLite3” application"}],"type":"link","identifier":"https:\/\/apps.apple.com\/us\/app\/code-for-sqlite3\/id1638111010","url":"https:\/\/apps.apple.com\/us\/app\/code-for-sqlite3\/id1638111010"},"https://github.com/SwiftGen/SwiftGen":{"title":"SwiftGen","titleInlineContent":[{"type":"text","text":"SwiftGen"}],"type":"link","identifier":"https:\/\/github.com\/SwiftGen\/SwiftGen","url":"https:\/\/github.com\/SwiftGen\/SwiftGen"},"doc://Lighter/documentation/Lighter/SQLInsertableRecord":{"role":"symbol","title":"SQLInsertableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInsertableRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":" that supports insertion."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLInsertableRecord"}],"url":"\/documentation\/lighter\/sqlinsertablerecord"},"https://github.com/Lighter-swift/Examples/":{"title":"Examples","titleInlineContent":[{"type":"text","text":"Examples"}],"type":"link","identifier":"https:\/\/github.com\/Lighter-swift\/Examples\/","url":"https:\/\/github.com\/Lighter-swift\/Examples\/"},"doc://Lighter/documentation/Lighter/SQLRecordFetchOperations":{"role":"symbol","title":"SQLRecordFetchOperations","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLRecordFetchOperations"}],"abstract":[{"type":"text","text":"Runs fetch queries against a certain SQL table\/view."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordFetchOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLRecordFetchOperations"}],"url":"\/documentation\/lighter\/sqlrecordfetchoperations"},"doc://Lighter/documentation/Lighter/SQLTransactionType":{"role":"symbol","title":"SQLTransactionType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTransactionType"}],"abstract":[{"type":"text","text":"The transaction type defines whether a transaction needs write access"},{"type":"text","text":" "},{"type":"text","text":"and in non-WAL mode, whether a transaction is exclusive (i.e. forbids"},{"type":"text","text":" "},{"type":"text","text":"concurrent reads)."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransactionType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLTransactionType"}],"url":"\/documentation\/lighter\/sqltransactiontype"},"doc://Lighter/documentation/Lighter/SQLRecordDiffingState":{"role":"symbol","title":"SQLRecordDiffingState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLRecordDiffingState"}],"abstract":[{"type":"text","text":"A helper object for record diffing."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecordDiffingState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLRecordDiffingState"}],"url":"\/documentation\/lighter\/sqlrecorddiffingstate"},"doc://Lighter/documentation/Lighter/SQLDatabaseAsyncFetchOperations":{"role":"symbol","title":"SQLDatabaseAsyncFetchOperations","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseAsyncFetchOperations"}],"abstract":[{"type":"text","text":"A mixin protocol to add async\/await variants of the “select”"},{"type":"text","text":" "},{"type":"text","text":"functions."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncFetchOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseAsyncFetchOperations"}],"url":"\/documentation\/lighter\/sqldatabaseasyncfetchoperations"},"doc://Lighter/documentation/Lighter/Mapping":{"role":"collectionGroup","title":"Mapping","abstract":[{"type":"text","text":"Mapping Data retrieved from the Database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Mapping","kind":"article","type":"topic","url":"\/documentation\/lighter\/mapping"},"https://www.sqlite.org":{"title":"SQLite3","titleInlineContent":[{"type":"text","text":"SQLite3"}],"type":"link","identifier":"https:\/\/www.sqlite.org","url":"https:\/\/www.sqlite.org"},"doc://Lighter/documentation/Lighter/SQLInterpolatedPredicate":{"role":"symbol","title":"SQLInterpolatedPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInterpolatedPredicate"}],"abstract":[{"type":"text","text":"A predicate containing raw SQL, that can use string interpolation to generate"},{"type":"text","text":" "},{"type":"text","text":"proper values."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInterpolatedPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLInterpolatedPredicate"}],"url":"\/documentation\/lighter\/sqlinterpolatedpredicate"},"doc://Lighter/documentation/Lighter/SQLKeyedTableRecord":{"role":"symbol","title":"SQLKeyedTableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLKeyedTableRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLKeyedTableRecord"},{"type":"text","text":" is a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableRecord"},{"type":"text","text":"(a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"that is tied to a table with a single primary key."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLKeyedTableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLKeyedTableRecord"}],"url":"\/documentation\/lighter\/sqlkeyedtablerecord"},"doc://Lighter/documentation/Lighter/SQLiteAPI":{"role":"article","title":"Dependency-Free API","abstract":[{"type":"text","text":"Using the dependency-free SQLite API."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLiteAPI","kind":"article","type":"topic","url":"\/documentation\/lighter\/sqliteapi"},"doc://Lighter/documentation/Lighter/SQLDeletableSchema":{"role":"symbol","title":"SQLDeletableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDeletableSchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite table or view that allows"},{"type":"text","text":" "},{"type":"text","text":"deletions."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDeletableSchema"}],"url":"\/documentation\/lighter\/sqldeletableschema"},"doc://Lighter/documentation/Lighter/FAQ":{"role":"article","title":"Frequently Asked Questions","abstract":[{"type":"text","text":"A collection of questions and possible answers."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/FAQ","kind":"article","type":"topic","url":"\/documentation\/lighter\/faq"},"doc://Lighter/documentation/Lighter/SQLCreationStatementsHolder":{"role":"symbol","title":"SQLCreationStatementsHolder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLCreationStatementsHolder"}],"abstract":[{"type":"text","text":"A type that holds SQL "},{"type":"codeVoice","code":"CREATE"},{"type":"text","text":" statements in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder\/creationSQL"},{"type":"text","text":" property."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLCreationStatementsHolder"}],"url":"\/documentation\/lighter\/sqlcreationstatementsholder"},"doc://Lighter/documentation/Lighter/Troubleshooting":{"role":"article","title":"Troubleshooting","abstract":[{"type":"text","text":"When the plugin doesn’t generate."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Troubleshooting","kind":"article","type":"topic","url":"\/documentation\/lighter\/troubleshooting"},"doc://Lighter/documentation/Lighter/SQLDatabaseChangeOperations":{"role":"symbol","title":"SQLDatabaseChangeOperations","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseChangeOperations"}],"abstract":[{"type":"text","text":"A mixin protocol to add record update\/insert\/delete functions."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseChangeOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseChangeOperations"}],"url":"\/documentation\/lighter\/sqldatabasechangeoperations"},"doc://Lighter/documentation/Lighter":{"role":"collection","title":"Lighter.swift for SQLite3","abstract":[{"type":"text","text":"Type-safe down to the schema. Very, "},{"type":"strong","inlineContent":[{"type":"text","text":"very"}]},{"type":"text","text":", fast. Dependency free."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter","kind":"symbol","type":"topic","url":"\/documentation\/lighter"},"doc://Lighter/documentation/Lighter/LighterError":{"role":"symbol","title":"LighterError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LighterError"}],"abstract":[{"type":"text","text":"An error that is thrown by Lighter database operations."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/LighterError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LighterError"}],"url":"\/documentation\/lighter\/lightererror"},"doc://Lighter/documentation/Lighter/SQLColumnValuePredicate":{"role":"symbol","title":"SQLColumnValuePredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLColumnValuePredicate"}],"abstract":[{"type":"text","text":"A predicate that compares a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" of a table\/view against"},{"type":"text","text":" "},{"type":"text","text":"a literal value."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValuePredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumnValuePredicate"}],"url":"\/documentation\/lighter\/sqlcolumnvaluepredicate"},"doc://Lighter/documentation/Lighter/SQLColumnComparisonPredicate":{"role":"symbol","title":"SQLColumnComparisonPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLColumnComparisonPredicate"}],"abstract":[{"type":"text","text":"A predicate that compares two "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":"s of a table\/view against"},{"type":"text","text":" "},{"type":"text","text":"each other."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnComparisonPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumnComparisonPredicate"}],"url":"\/documentation\/lighter\/sqlcolumncomparisonpredicate"},"doc://Lighter/documentation/Lighter/SQLCompoundPredicate":{"role":"symbol","title":"SQLCompoundPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLCompoundPredicate"}],"abstract":[{"type":"text","text":"A predicate that joins two predicates by either "},{"type":"codeVoice","code":"AND"},{"type":"text","text":" or "},{"type":"codeVoice","code":"OR"},{"type":"text","text":"."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCompoundPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLCompoundPredicate"}],"url":"\/documentation\/lighter\/sqlcompoundpredicate"},"doc://Lighter/documentation/Lighter/SQLTransaction":{"role":"symbol","title":"SQLTransaction","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTransaction"}],"abstract":[{"type":"text","text":"A SQL transaction allows the user to run multiple SQL operations"},{"type":"text","text":" "},{"type":"text","text":"as a single, atomic unit."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransaction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLTransaction"}],"url":"\/documentation\/lighter\/sqltransaction"},"doc://Lighter/documentation/Lighter/MappedColumn":{"role":"symbol","title":"MappedColumn","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MappedColumn"}],"abstract":[{"type":"text","text":"A concrete implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedColumn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MappedColumn"}],"url":"\/documentation\/lighter\/mappedcolumn"},"doc://Lighter/documentation/Lighter/SQLDeletableRecord":{"role":"symbol","title":"SQLDeletableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDeletableRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":" that supports deletion."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDeletableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDeletableRecord"}],"url":"\/documentation\/lighter\/sqldeletablerecord"},"doc://Lighter/documentation/Lighter/LighterAPI":{"role":"collectionGroup","title":"Lighter API Overview","abstract":[{"type":"text","text":"Using the Lighter API."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/LighterAPI","kind":"article","type":"topic","url":"\/documentation\/lighter\/lighterapi"},"doc://Lighter/documentation/Lighter/Performance":{"role":"article","title":"Performance","abstract":[{"type":"text","text":"A quick look at Lighter performance."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Performance","kind":"article","type":"topic","url":"\/documentation\/lighter\/performance"},"doc://Lighter/documentation/Lighter/SQLDatabaseFetchOperations":{"role":"symbol","title":"SQLDatabaseFetchOperations","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseFetchOperations"}],"abstract":[{"type":"text","text":"A mixin protocol to add “select” functions."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseFetchOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseFetchOperations"}],"url":"\/documentation\/lighter\/sqldatabasefetchoperations"},"doc://Lighter/documentation/Lighter/SQLColumnValueRangePredicate":{"role":"symbol","title":"SQLColumnValueRangePredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLColumnValueRangePredicate"}],"abstract":[{"type":"text","text":"A predicate that matches a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumn"},{"type":"text","text":" of a table\/view against"},{"type":"text","text":" "},{"type":"text","text":"a range of values."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLColumnValueRangePredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLColumnValueRangePredicate"}],"url":"\/documentation\/lighter\/sqlcolumnvaluerangepredicate"},"doc://Lighter/documentation/Lighter/SQLViewRecord":{"role":"symbol","title":"SQLViewRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLViewRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SQLViewRecord"},{"type":"text","text":" is a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":" that is tied to a table specifically."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLViewRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLViewRecord"}],"url":"\/documentation\/lighter\/sqlviewrecord"},"doc://Lighter/documentation/Lighter/SQLValueChanges":{"role":"symbol","title":"SQLValueChanges","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLValueChanges"}],"abstract":[{"type":"text","text":"Types conforming to this protocol can diff themselves against each other."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLValueChanges","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLValueChanges"}],"url":"\/documentation\/lighter\/sqlvaluechanges"},"doc://Lighter/documentation/Lighter/SQLViewSchema":{"role":"symbol","title":"SQLViewSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLViewSchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite view."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLViewSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLViewSchema"}],"url":"\/documentation\/lighter\/sqlviewschema"},"doc://Lighter/documentation/Lighter/MappedForeignKey":{"role":"symbol","title":"MappedForeignKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MappedForeignKey"}],"abstract":[{"type":"text","text":"A concrete implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLForeignKeyColumn"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/MappedForeignKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MappedForeignKey"}],"url":"\/documentation\/lighter\/mappedforeignkey"},"doc://Lighter/documentation/Lighter/SQLInsertableSchema":{"role":"symbol","title":"SQLInsertableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLInsertableSchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite table or view that allows"},{"type":"text","text":" "},{"type":"text","text":"insertion."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLInsertableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLInsertableSchema"}],"url":"\/documentation\/lighter\/sqlinsertableschema"},"doc://Lighter/documentation/Lighter/SQLUpdatableRecord":{"role":"symbol","title":"SQLUpdatableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLUpdatableRecord"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLRecord"},{"type":"text","text":" that supports updates."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLUpdatableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLUpdatableRecord"}],"url":"\/documentation\/lighter\/sqlupdatablerecord"},"doc://Lighter/documentation/Lighter/SQLDatabaseOperations":{"role":"symbol","title":"SQLDatabaseOperations","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseOperations"}],"abstract":[{"type":"text","text":"A protocol that can be implemented by objects that allow for database"},{"type":"text","text":" "},{"type":"text","text":"operations. I.e. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabase"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTransaction"},{"type":"text","text":"."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseOperations"}],"url":"\/documentation\/lighter\/sqldatabaseoperations"},"https://lighter-swift.github.io/NorthwindSQLite.swift/documentation/northwind/employee":{"title":"Example","titleInlineContent":[{"type":"text","text":"Example"}],"type":"link","identifier":"https:\/\/lighter-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/employee","url":"https:\/\/lighter-swift.github.io\/NorthwindSQLite.swift\/documentation\/northwind\/employee"},"doc://Lighter/documentation/Lighter/SQLSwiftMatchableSchema":{"role":"symbol","title":"SQLSwiftMatchableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLSwiftMatchableSchema"}],"abstract":[{"type":"text","text":"An entity schema which supports selects that filter using a Swift closure"},{"type":"text","text":" "},{"type":"text","text":"(vs a SQL "},{"type":"codeVoice","code":"WHERE"},{"type":"text","text":" condition)."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLSwiftMatchableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLSwiftMatchableSchema"}],"url":"\/documentation\/lighter\/sqlswiftmatchableschema"},"doc://Lighter/documentation/Lighter/SQLTableSchema":{"role":"symbol","title":"SQLTableSchema","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLTableSchema"}],"abstract":[{"type":"text","text":"The schema information for either a SQLite table."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLTableSchema","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLTableSchema"}],"url":"\/documentation\/lighter\/sqltableschema"},"doc://Lighter/documentation/Lighter/SQLCreationStatementsHolder/creationSQL":{"role":"symbol","title":"creationSQL","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"creationSQL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"SQL "},{"type":"codeVoice","code":"CREATE"},{"type":"text","text":" statements (e.g. "},{"type":"codeVoice","code":"CREATE TABLE person (...)"},{"type":"text","text":")."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLCreationStatementsHolder\/creationSQL","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/lighter\/sqlcreationstatementsholder\/creationsql"},"doc://Lighter/documentation/Lighter/Manual":{"role":"article","title":"Manual Generation","abstract":[{"type":"text","text":"How to generate Lighter content by hand."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/Manual","kind":"article","type":"topic","url":"\/documentation\/lighter\/manual"},"doc://Lighter/documentation/Lighter/SQLDatabaseAsyncChangeOperations":{"role":"symbol","title":"SQLDatabaseAsyncChangeOperations","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLDatabaseAsyncChangeOperations"}],"abstract":[{"type":"text","text":"Asynchronous operations that change the database."}],"identifier":"doc:\/\/Lighter\/documentation\/Lighter\/SQLDatabaseAsyncChangeOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLDatabaseAsyncChangeOperations"}],"url":"\/documentation\/lighter\/sqldatabaseasyncchangeoperations"}}}